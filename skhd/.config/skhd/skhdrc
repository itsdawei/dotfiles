#!/usr/bin/env sh
# if you're having troubles finding key codes for a key just type skhd --observe in a terminal and type a key. Pretty cool! Or just check the wiki.

## HYPER == SHIFT + CMD + ALT + OPTION
# Quickly restart the yabai launch agent
cmd + shift - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai" && launchctl kickstart -k "gui/${UID}/homebrew.mxcl.spacebar"

# Close active application
cmd + shift - c : $(yabai -m window $(yabai -m query --windows --window | jq -re ".id") --close)

# test a command
# lshift - x : terminal-notifier -message "lshift - x"
# lshift - x : terminal-notifier -message "$(yabai -m query --windows --window | jq -re ".id")"

# open terminal
cmd - return : open -na 'kitty.app'
# cmd - return : open -na 'alacritty.app'
alt - return : open -na 'Brave Browser.app'

# cycle float and tiled windows on space (back and forwards)
cmd - k: yabai -m window --focus "$(yabai -m query --windows --space | jq -re "[sort_by(.id, .frame) | .[] | select(.role == \"AXWindow\" and .subrole == \"AXStandardWindow\") | .id] | nth(index($(yabai -m query --windows --window | jq -re ".id")) - 1)")"
cmd - j: yabai -m window --focus "$(yabai -m query --windows --space | jq -re "[sort_by(.id, .frame) | reverse | .[] | select(.role == \"AXWindow\" and .subrole == \"AXStandardWindow\") | .id] | nth(index($(yabai -m query --windows --window | jq -re ".id")) - 1)")"
alt - z : yabai -m window --focus stack.prev
alt - c : yabai -m window --focus stack.next

# swap window
shift + alt - x : yabai -m window --swap recent
shift + alt - h : yabai -m window --swap west
shift + alt - j : yabai -m window --swap south
shift + alt - k : yabai -m window --swap north
shift + alt - l : yabai -m window --swap east

# move window
shift + cmd - h : yabai -m window --warp west
shift + cmd - j : yabai -m window --warp south
shift + cmd - k : yabai -m window --warp north
shift + cmd - l : yabai -m window --warp east

# balance size of windows
shift + alt - 0 : yabai -m space --balance

# make floating window fill screen
shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# make floating window fill right-half of screen
shift + alt - right  : yabai -m window --grid 1:2:1:0:1:1

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
shift + cmd - n : yabai -m space --create && index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && yabai -m window --space "${index}" && yabai -m space --focus "${index}"

# create desktop and follow focus - uses jq for parsing json (brew install jq)
cmd + alt - n : yabai -m space --create && index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && yabai -m space --focus "${index}"

# destroy desktop
cmd + alt - w : yabai -m space --destroy

# fast focus desktop
cmd - 1 : yabai -m space --focus  1 || skhd -k "ctrl + alt + cmd - 1"
cmd - 2 : yabai -m space --focus  2 || skhd -k "ctrl + alt + cmd - 2"
cmd - 3 : yabai -m space --focus  3 || skhd -k "ctrl + alt + cmd - 3"
cmd - 4 : yabai -m space --focus  4 || skhd -k "ctrl + alt + cmd - 4"
cmd - 5 : yabai -m space --focus  5 || skhd -k "ctrl + alt + cmd - 5"
cmd - 6 : yabai -m space --focus  6 || skhd -k "ctrl + alt + cmd - 6"
cmd - 7 : yabai -m space --focus  7 || skhd -k "ctrl + alt + cmd - 7"
cmd - 8 : yabai -m space --focus  8 || skhd -k "ctrl + alt + cmd - 8"
cmd - 9 : yabai -m space --focus  9 || skhd -k "ctrl + alt + cmd - 9"
cmd - 0 : yabai -m space --focus 10 || skhd -k "ctrl + alt + cmd - 0"

# send window to desktop and follow focus
cmd + shift - x : yabai -m window --space recent && yabai -m space --focus recent
cmd + shift - z : yabai -m window --space prev && yabai -m space --focus prev
cmd + shift - c : yabai -m window --space next && yabai -m space --focus next
cmd + shift - 1 : yabai -m window --space  1 && yabai -m space --focus 1
cmd + shift - 2 : yabai -m window --space  2 && yabai -m space --focus 2
cmd + shift - 3 : yabai -m window --space  3 && yabai -m space --focus 3
cmd + shift - 4 : yabai -m window --space  4 && yabai -m space --focus 4
cmd + shift - 5 : yabai -m window --space  5 && yabai -m space --focus 5
cmd + shift - 6 : yabai -m window --space  6 && yabai -m space --focus 6
cmd + shift - 7 : yabai -m window --space  7 && yabai -m space --focus 7
cmd + shift - 8 : yabai -m window --space  8 && yabai -m space --focus 8
cmd + shift - 9 : yabai -m window --space  9 && yabai -m space --focus 9
cmd + shift - 0 : yabai -m window --space 10 && yabai -m space --focus 10

# focus monitor
cmd - 0x2B  : yabai -m display --focus prev
cmd - 0x2F  : yabai -m display --focus next

# send window to monitor and follow focus
ctrl + cmd - x  : yabai -m window --display recent && yabai -m display --focus recent
ctrl + cmd - z  : yabai -m window --display prev && yabai -m display --focus prev
ctrl + cmd - c  : yabai -m window --display next && yabai -m display --focus next
ctrl + cmd - 1  : yabai -m window --display 1 && yabai -m display --focus 1
ctrl + cmd - 2  : yabai -m window --display 2 && yabai -m display --focus 2
ctrl + cmd - 3  : yabai -m window --display 3 && yabai -m display --focus 3

# move window
shift + ctrl - a : yabai -m window --move rel:-20:0
shift + ctrl - s : yabai -m window --move rel:0:20
shift + ctrl - w : yabai -m window --move rel:0:-20
shift + ctrl - d : yabai -m window --move rel:20:0

# increase window size
shift + alt - a : yabai -m window --resize left:-20:0
shift + alt - s : yabai -m window --resize bottom:0:20
shift + alt - w : yabai -m window --resize top:0:-20
shift + alt - d : yabai -m window --resize right:20:0

# decrease window size
shift + cmd - a : yabai -m window --resize left:20:0
shift + cmd - s : yabai -m window --resize bottom:0:-20
shift + cmd - w : yabai -m window --resize top:0:20
shift + cmd - d : yabai -m window --resize right:-20:0

# set insertion point in focused container
ctrl + alt - h : yabai -m window --insert west
ctrl + alt - j : yabai -m window --insert south
ctrl + alt - k : yabai -m window --insert north
ctrl + alt - l : yabai -m window --insert east
ctrl + alt - i : yabai -m window --insert stack

# rotate tree
alt - r : yabai -m space --rotate 90

# mirror tree y-axis
alt - y : yabai -m space --mirror y-axis

# mirror tree x-axis
alt - x : yabai -m space --mirror x-axis

# toggle desktop offset
alt - a : yabai -m space --toggle padding && yabai -m space --toggle gap

# toggle window parent zoom
alt - d : yabai -m window --toggle zoom-parent

# toggle window fullscreen zoom
alt - f : yabai -m window --toggle zoom-fullscreen

# toggle window native fullscreen
shift + alt - f : yabai -m window --toggle native-fullscreen

# toggle window split type
alt - e : yabai -m window --toggle split

# float / unfloat window and restore position
alt - t : yabai -m window --toggle float && yabai -m window --grid 4:4:1:1:2:2

# toggle sticky (show on all spaces)
alt - s : yabai -m window --toggle sticky

# toggle topmost (keep above other windows)
alt - o : yabai -m indow --toggle topmost

# toggle picture-in-picture
alt - p : yabai -m window --toggle border && yabai -m window --toggle pip

shift + alt - z : yabai -m space --layout bsp
shift + alt - x : yabai -m space --layout float
shift + alt - c : yabai -m space --layout stack

# prevents skhd from monitoring events for listed processes.
.blacklist [
"terminal"
]
